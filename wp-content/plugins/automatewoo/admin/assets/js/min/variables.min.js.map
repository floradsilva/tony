{"version":3,"sources":["variables.js"],"names":["jQuery","$","AutomateWoo","Variables","$meta_box","init","this","init_clipboard","document","body","on","update_preview_field","restrict_parameter_chars","open_modal","Clipboard","e","html","setTimeout","Modal","close","open","loading","ajax_data","action","variable","text","post","ajaxurl","response","contents","$preview_field","data","parameters","each","$param_row","parents","show_logic","split","$condition_field","length","val","hide","show","param","name","attr","required","value","push","string","generate_variable_string","position","param_parts","i","join","inArray","which"],"mappings":"AAIAA,OAAO,SAASC,GAEZC,YAAYC,UAAY,CAEpBC,UAAWH,EAAE,qBAGbI,KAAM,WAEFC,KAAKC,iBAELN,EAAEO,SAASC,MAAMC,GAAI,eAAgB,kCAAmCJ,KAAKK,sBAC7EV,EAAEO,SAASC,MAAMC,GAAI,WAAY,uCAAwCJ,KAAKM,0BAE9EN,KAAKF,UAAUM,GAAI,QAAS,wBAAyBJ,KAAKO,aAO9DN,eAAgB,WAEI,IAAIO,UAAU,qBAEpBJ,GAAG,UAAW,SAASK,GAE7Bd,EAAE,qBAAqBe,KAAK,WAE5BC,WAAW,WACPf,YAAYgB,MAAMC,SACnB,QAMXN,WAAY,WAERX,YAAYgB,MAAME,KAAM,QACxBlB,YAAYgB,MAAMG,UAElB,IAAIC,EAAY,CACZC,OAAQ,yBACRC,SAAUvB,EAAEK,MAAMmB,QAGtBxB,EAAEyB,KAAMC,QAASL,EAAW,SAAUM,GAClC1B,YAAYgB,MAAMW,SAAUD,GAC5B1B,YAAYC,UAAUQ,0BAQ9BA,qBAAsB,WAElB,IAAImB,EAAiB7B,EAAE,uCACnBuB,EAAWM,EAAeC,KAAK,YAC/BC,EAAa,GAEjB/B,EAAE,mCAAmCgC,KAAK,WAEtC,IAAIC,EAAajC,EAAEK,MAAM6B,QAAQ,8CAGjC,GAAKD,EAAWH,KAAK,kBAAoB,CAErC,IAAIK,EAAaF,EAAWH,KAAK,kBAAkBM,MAAM,KAErDC,EAAmBrC,EAAE,yCAA2CmC,EAAW,GAAK,MAEpF,IAAKE,EAAiBC,QAAUD,EAAiBE,OAASJ,EAAW,GAIjE,YADAF,EAAWO,OAFXP,EAAWQ,OAOnB,IAAIC,EAAQ,CACRC,KAAM3C,EAAEK,MAAMuC,KAAK,QACnBC,SAAUZ,EAAWH,KAAK,eAC1BgB,MAAO9C,EAAEK,MAAMkC,OAGnBR,EAAWgB,KAAML,KAGrB,IAAIM,EAAS/C,YAAYC,UAAU+C,yBAA0B1B,EAAUQ,GAEvEF,EAAeL,KAAMwB,GAErB/C,YAAYgB,MAAMiC,YAStBD,yBAA0B,SAAU1B,EAAUQ,GAE1C,IAAIiB,EAAS,MAAQzB,EAErB,GAAKQ,EAAWO,OAAS,CACrB,IAAIa,EAAc,GAElBnD,EAAEgC,KAAMD,EAAY,SAAUqB,EAAGV,GAExBA,EAAMI,MACPK,EAAYJ,KAAML,EAAMC,KAAO,MAAQD,EAAMI,MAAQ,KAE/CJ,EAAMG,UACZM,EAAYJ,KAAML,EAAMC,KAAO,aAKb,EAArBQ,EAAYb,SACbU,GAAU,MACVA,GAAUG,EAAYE,KAAM,OAIpC,OAAOL,EAAS,OAQpBrC,yBAA0B,SAASG,GAI/B,IAA2C,IAAtCd,EAAEsD,QAASxC,EAAEyC,MAFD,CAAE,GAAI,IAAK,IAAK,MAG7B,OAAO,IAMnBtD,YAAYC,UAAUE","file":"variables.min.js","sourcesContent":["/**\n * AutomateWoo Variables\n */\n\njQuery(function($) {\n\n    AutomateWoo.Variables = {\n\n        $meta_box: $('#aw_variables_box'),\n\n\n        init: function(){\n\n            this.init_clipboard();\n\n            $(document.body).on( 'change keyup', '.aw-workflow-variable-parameter', this.update_preview_field );\n            $(document.body).on( 'keypress', 'input.aw-workflow-variable-parameter', this.restrict_parameter_chars );\n\n            this.$meta_box.on( 'click', '.aw-workflow-variable', this.open_modal );\n        },\n\n\n        /**\n         *\n         */\n        init_clipboard: function() {\n\n            var clipboard = new Clipboard('.aw-clipboard-btn');\n\n            clipboard.on('success', function(e) {\n\n                $('.aw-clipboard-btn').html('Copied!');\n\n                setTimeout(function(){\n                    AutomateWoo.Modal.close();\n                }, 500 );\n            });\n\n        },\n\n\n        open_modal: function(){\n\n            AutomateWoo.Modal.open( 'ajax' );\n            AutomateWoo.Modal.loading();\n\n            var ajax_data = {\n                action: 'aw_modal_variable_info',\n                variable: $(this).text()\n            };\n\n            $.post( ajaxurl, ajax_data, function( response ){\n                AutomateWoo.Modal.contents( response );\n                AutomateWoo.Variables.update_preview_field();\n            });\n        },\n\n\n        /**\n         * Updates the variable preview text field\n         */\n        update_preview_field: function() {\n\n            var $preview_field = $('#aw_workflow_variable_preview_field');\n            var variable = $preview_field.data('variable');\n            var parameters = [];\n\n            $('.aw-workflow-variable-parameter').each(function(){\n\n                var $param_row = $(this).parents('.aw-workflow-variables-parameter-row:first');\n\n                // Check 'show' logic\n                if ( $param_row.data('parameter-show') ) {\n\n                    var show_logic = $param_row.data('parameter-show').split('=');\n\n                    var $condition_field = $('.aw-workflow-variable-parameter[name=\"' + show_logic[0] + '\"]');\n\n                    if ( $condition_field.length && $condition_field.val() == show_logic[1] ) {\n                        $param_row.show();\n                    } else {\n                        $param_row.hide();\n                        return; // don't add parameter to preview\n                    }\n                }\n\n                var param = {\n                    name: $(this).attr('name'),\n                    required: $param_row.data('is-required'),\n                    value: $(this).val()\n                };\n\n                parameters.push( param );\n            });\n\n            var string = AutomateWoo.Variables.generate_variable_string( variable, parameters );\n\n            $preview_field.text( string );\n\n            AutomateWoo.Modal.position();\n        },\n\n\n        /**\n         *\n         * @param variable\n         * @param parameters\n         */\n        generate_variable_string: function( variable, parameters ) {\n\n            var string = '{{ ' + variable;\n\n            if ( parameters.length ) {\n                var param_parts = [];\n\n                $.each( parameters, function( i, param ) {\n\n                    if ( param.value ) {\n                        param_parts.push( param.name + \": '\" + param.value + \"'\" );\n                    }\n                    else if ( param.required ) {\n                        param_parts.push( param.name + \": '...'\" );\n                    }\n                });\n\n\n                if ( param_parts.length > 0 ) {\n                    string += ' | ';\n                    string += param_parts.join( ', ' );\n                }\n            }\n\n            return string + ' }}';\n        },\n\n\n        /**\n         *\n         * @param e\n         */\n        restrict_parameter_chars: function(e) {\n\n            var restricted = [ 39, 123, 124, 125 ];\n\n            if ( $.inArray( e.which, restricted ) !== -1 )\n                return false;\n        }\n\n    };\n\n\n    AutomateWoo.Variables.init();\n\n});"]}